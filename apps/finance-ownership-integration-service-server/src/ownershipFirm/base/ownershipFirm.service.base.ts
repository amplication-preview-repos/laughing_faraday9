/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OwnershipFirm as PrismaOwnershipFirm } from "@prisma/client";

export class OwnershipFirmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OwnershipFirmCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ownershipFirm.count(args);
  }

  async ownershipFirms<T extends Prisma.OwnershipFirmFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OwnershipFirmFindManyArgs>
  ): Promise<PrismaOwnershipFirm[]> {
    return this.prisma.ownershipFirm.findMany<Prisma.OwnershipFirmFindManyArgs>(
      args
    );
  }
  async ownershipFirm<T extends Prisma.OwnershipFirmFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OwnershipFirmFindUniqueArgs>
  ): Promise<PrismaOwnershipFirm | null> {
    return this.prisma.ownershipFirm.findUnique(args);
  }
  async createOwnershipFirm<T extends Prisma.OwnershipFirmCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OwnershipFirmCreateArgs>
  ): Promise<PrismaOwnershipFirm> {
    return this.prisma.ownershipFirm.create<T>(args);
  }
  async updateOwnershipFirm<T extends Prisma.OwnershipFirmUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OwnershipFirmUpdateArgs>
  ): Promise<PrismaOwnershipFirm> {
    return this.prisma.ownershipFirm.update<T>(args);
  }
  async deleteOwnershipFirm<T extends Prisma.OwnershipFirmDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OwnershipFirmDeleteArgs>
  ): Promise<PrismaOwnershipFirm> {
    return this.prisma.ownershipFirm.delete(args);
  }
}
